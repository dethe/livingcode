First VanPyZ of 2009

#published: 2009-01-07
#tags: Python, Meeting
#type: Journal Post
#uuid: 7dba86ba-e21c-42e9-aa2c-16d0df44a17b

I really need to start blogging these *before* they happen, but I will at least try to summarize the January <a href="http://vanpyz.org/">Vancouver Python user group</a> meeting.  Our featured speaker wasn't able to make it, and it was only with the nudging of <a href="http://www.agmweb.ca/blog/andy/">Andy</a> and the gracious help of <a href="http://jimpick.com/">Jim</a> and <a href="http://www.abetterplacetowork.com/">Dane</a> at <a href="http://www.abetterplacetowork.com/">Workspace</a> that we even had a January meeting.  But a meeting was had, a surprising number of people braved the heavy rain, and we had a good time talking about our varied interests and explorations, mostly with a Python theme.

**What I did over winter vacation**

We had an open discussion, starting with the nominal topic of the night, Python packaging.  We discussed some of the pros and cons of <a href="http://docs.python.org/library/distutils.html">distutils</a>, <a href="http://peak.telecommunity.com/DevCenter/setuptools">setuptools</a>, and <a href="http://peak.telecommunity.com/DevCenter/EasyInstall">easy_install</a>. Our casual conclusion was that all of these tools work better if you first use Ian Bicking's <a href="http://blog.ianbicking.org/2007/10/10/workingenv-is-dead-long-live-virtualenv/">VirtualEnv</a> to prevent library pollution in your main Python install.  VirtualEnv puts a copy of Python, your required libraries, and any dependencies they have into a separate directory and then runs from that, keeping a project nicely sandboxed.  The OS X Python application builder <a href="http://undefined.org/python/py2app.html">py2app</a>, works similarly, but after the fact as a final build step so you can deliver a complete application without worrying what version of Python and libraries are installed on a user's computer.  Ian Bicking also has package installer you can use with (or without) VirtualEnv, called <a href="http://blog.ianbicking.org/2008/10/28/pyinstall-is-dead-long-live-pip/">Pip</a>, and if you check his two links here you may notice a pattern forming for his blog titles.

From there we wandered around, topic-wise, discussing XML/HTML parsing libraries such as <a href="http://www.crummy.com/software/BeautifulSoup/">Beautiful Soup</a> and <a href="http://codespeak.net/lxml/">lxml</a>, from there to screen scrapers like <a href="http://wwwsearch.sourceforge.net/mechanize/">mechanize</a>, to web spiders like <a href="http://scrapy.org/">scrapy</a>.

Conversation drifted into 3D for a bit, touching on VRML/X3D and the open-source <a href="http://freewrl.sourceforge.net/">FreeWRL</a> viewer (built by the Canadian Government, yay!).  While it isn't really a Python project, there is a Python library to generate VRML as part of the <a href="http://dirac.cnrs-orleans.fr/ScientificPython/ScientificPythonManual/">Scientific</a> library (not to be confused with <a href="http://www.scipy.org/">SciPy</a>.  And if you don't want to go the XML route, you can stay in Python because Scientific can also generate <a href="http://vpython.org/">VPython</a> code (although VPython does not yet support things like transparency or texture mapping).

We kept coming back to web frameworks, discussing the tradeoffs between <a href="http://www.djangoproject.com/">Django</a> and <a href="http://www.zope.org/">Zope</a>/<a href="http://plone.org/">Plone</a> and the impact of "cloud computing" platforms such as <a href="http://aws.amazon.com/">Amazon Web Services</a> (AWS) and <a href="http://code.google.com/appengine/">Google App Engine</a>.  While the AWS services give a lot more flexibility, they require a substantial amount of planning and configuration.  App Engine has the easy deployment of a PHP app, but with the convenience of Python and the power of Big Table, but the rather substantial disadvantage of still being a beta environment that you can't actually buy services on yet (no scaling up).

There are some workarounds for these and other problems (the App Engine 10 app limit, for instance).  <a href="http://hadoop.apache.org/core/">Hadoop</a> was mentioned as an open-source alternative to App Engine.  <a href="http://developer.amazonwebservices.com/connect/kbcategory.jspa?categoryID=101">Amazon Machine Images</a> can give you a head start at deploying on AWS, although you will still need to make arrangements for data persistence. <a href="http://www.10gen.com/">10gen</a> appears to be building using the App Engine model (more or less), but as a smaller player, they may be more responsive to user feedback.  <a href="http://www.lowendbox.com/">LowEndBox</a> is not a provider, but a blog tracking ultra-cheap hosting with root access, so you could conceivably build your own AWS on a shoestring.  

Since I spent part of the holidays building Lego Mindstorms models with my kids (a <a href="http://www.nxtprograms.com/machine_gun/index.html">machine gun</a> and a <a href="http://www.nxtprograms.com/puppy/index.html">puppy</a>), I kept trying to steer the conversation towards robotics. Unfortunately, the <a href="http://pyrorobotics.org/">Python Robotics</a> project does not support Mindstorms yet, but they do support Roombas, so I may still be in luck.  I haven't found a Python project for programming Mindstorms yet, but you could probably wrap <a href="http://bricxcc.sourceforge.net/nbc/">Not Exactly C</a> with Python fairly easily, and after the meeting I found this script to <a href="http://code.activestate.com/recipes/498085/">use Bluetooth to control Mindstorms from Python</a>.

After that we continued the discussion at the pub and I don't have any browser history to help me remember that part of the discussion.  I do remember that before the meeting started, I did plug <a href="http://scratch.mit.edu/">Scratch</a> again as the best way to introduce 6-12 year olds to programming. 

Finally, I want to thank everyone on the <a href="http://lists.livingcode.org/listinfo.cgi/vanpyz-livingcode.org/">VanPyZ mailing list</a> for helping to organize and to re-establish the group's web site after recent hack attacks and crashing, especially<a href="http://henry.precheur.org/"> Henry PrÃªcheur</a> for restoring the content and moving it to the official Python wiki for the <a href="http://wiki.python.org/moin/VanPyZ">new VanPyZ page</a>.




